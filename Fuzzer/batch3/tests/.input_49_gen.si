p-s

_p0:    csrrwi x12, mhartid, 13                   
_p1:    xor x10, x10, x10                         
        addi x10, zero, 1                         
        slli x10, x10, 12                         
        add x10, x10, x10                         
        addi x14, zero, 1                         
        slli x14, x14, 11                         
        add x10, x10, x14                         
        addi x10, zero, 3                         
        slli x10, x10, 30                         
        add x10, x10, x10                         
        csrrw x10, sip, x10                       
_p2:    csrrci x12, pmpaddr5, 0                   
_l0:    xor x15, x15, x15                         0000
        addi x18, zero, 1                         0000
        slli x18, x18, 6                          0000
        add x15, x15, x18                         0000
        csrrw x18, mstatus, x15                   0000
_l1:    la x25, d_2_11                            0000
        lb x18, -28(x25)                          0000
_l2:    xor x26, x26, x26                         0000
        addi x24, zero, 3                         0000
        slli x24, x24, 5                          0000
        add x26, x26, x24                         0000
        csrrw x28, fflags, x26                    0000
_l3:    ecall                                     0000
_l4:    la x12, d_4_22                            0000
        addi x12, x12, 8                          0000
        amoswap.w x22, x9, (x12)                  0000
_l5:    fsgnjx.s f16, f16, f8                     0000
_l6:    fcvt.wu.s x8, f0, rtz                     0000
_l7:    blt x28, x10, _l96                        0000
_l8:    fclass.s x20, f9                          0000
_l9:    csrrsi x12, satp, 30                      0000
_l10:   la x4, d_2_0                              0000
        addi x4, x4, 0                            0000
        amomin.d x4, x12, (x4)                    0000
_l11:   la x26, d_3_5                             0000
        addi x26, x26, 24                         0000
        amoadd.w x23, x13, (x26)                  0000
_l12:   sllw x16, x2, x5                          0000
_l13:   la x5, _l120                              0000
        csrrw zero, mepc, x5                      0000
        mret                                      0000
_l14:   fence.i                                   0000
_l15:   auipc x20, 10                             0000
_l16:   remu x19, x22, x19                        0000
_l17:   subw x9, x19, x17                         0000
_l18:   sltiu x15, x10, -5                        0000
_l19:   fcvt.w.s x14, f25, rdn                    0000
_l20:   la x5, d_5_6                              0000
        addi x5, x5, -8                           0000
        amominu.d x25, x29, (x5)                  0000
_l21:   xori x23, x16, -930                       0000
_l22:   la x2, d_4_7                              0000
        addi x2, x2, -24                          0000
        sc.d x29, x2, (x2)                        0000
_l23:   fdiv.s f2, f9, f31, dyn                   0000
_l24:   li x3, 1                                  0000
        la x19, pt1                               0000
        addi x19, x19, 40                         0000
        sfence.vma x3, x19                        0000
_l25:   fsqrt.s f7, f9, dyn                       0000
_l26:   fmax.s f7, f2, f8                         0000
_l27:   la x18, d_2_12                            0000
        sb x2, -0(x18)                            0000
_l28:   fclass.s x2, f30                          0000
_l29:   bltu x15, x3, _l111                       0000
_l30:   feq.s x8, f9, f13                         0000
_l31:   la x19, d_4_23                            0000
        sd x8, -0(x19)                            0000
_l32:   fmv.x.w x1, f10                           0000
_l33:   la x26, d_2_11                            0000
        addi x26, x26, -0                         0000
        amomaxu.w x3, x10, (x26)                  0000
_l34:   fmax.s f18, f16, f22                      0000
_l35:   fmadd.s f28, f20, f5, f21, rne            0000
_l36:   slti x28, x5, -0                          0000
_l37:   xor x10, x10, x10                         0000
        csrrs x12, mtval, x10                     0000
_l38:   addiw x14, x14, 362                       0000
_l39:   la x22, d_4_23                            0000
        addi x22, x22, -16                        0000
        amomaxu.d x12, x9, (x22)                  0000
_l40:   fsqrt.s f15, f12, rne                     0000
_l41:   la x22, d_1_17                            0000
        addi x22, x22, -12                        0000
        amominu.w x14, x26, (x22)                 0000
_l42:   fle.s x7, f23, f8                         0000
_l43:   fcvt.w.s x20, f25, rtz                    0000
_l44:   fnmadd.s f31, f7, f18, f9, rtz            0000
_l45:   la x28, d_1_23                            0000
        sd x7, -0(x28)                            0000
_l46:   xori x28, x13, -358                       0000
_l47:   la x1, d_5_2                              0000
        addi x1, x1, -8                           0000
        amoadd.d x19, x26, (x1)                   0000
_l48:   xor x7, x7, x7                            0000
        addi x4, zero, 1                          0000
        slli x4, x4, 5                            0000
        add x7, x7, x4                            0000
        addi x25, zero, 1                         0000
        slli x25, x25, 9                          0000
        add x7, x7, x25                           0000
        addi x7, zero, 3                          0000
        slli x7, x7, 13                           0000
        add x7, x7, x7                            0000
        csrrs x17, sscratch, x7                   0000
_l49:   fcvt.s.w f27, x22, rmm                    0000
_l50:   la x17, d_2_19                            0000
        addi x17, x17, 16                         0000
        amoand.w x14, x14, (x17)                  0000
_l51:   beq x8, x5, _l141                         0000
_l52:   jal x22, _l141                            0000
_l53:   sraw x14, x17, x28                        0000
_l54:   la x7, _l129                              0000
        srai x7, x7, 1                            0000
        csrrc x17, pmpaddr5, x7                   0000
_l55:   la x17, _l131                             0000
        csrrw zero, mepc, x17                     0000
        mret                                      0000
_l56:   fnmadd.s f31, f17, f20, f27, dyn          0000
_l57:   fmin.s f12, f1, f3                        0000
_l58:   fadd.s f4, f30, f18, rne                  0000
_l59:   addiw x25, x1, 1102                       0000
_l60:   fnmadd.s f4, f13, f24, f23, rup           0000
_l61:   la x29, d_2_18                            0000
        lui x15, 0xffe00                          0000
        xor x29, x29, x15                         0000
        flw f24, 20(x29)                          0000
_l62:   la x11, d_1_27                            0000
        addi x11, x11, 12                         0000
        amomax.w x11, x5, (x11)                   0000
_l63:   bltu x12, x14, _l73                       0000
_l64:   fclass.s x18, f10                         0000
_l65:   slti x6, x25, 13                          0000
_l66:   csrrwi x9, sie, 13                        0000
_l67:   srai x6, x13, 28                          0000
_l68:   fmsub.s f12, f4, f25, f3, rtz             0000
_l69:   addiw x16, x19, 1603                      0000
_l70:   la x16, d_1_7                             0000
        sd x18, 16(x16)                           0000
_l71:   la x15, d_5_25                            0000
        addi x15, x15, 24                         0000
        lui x19, 0xffe00                          0000
        xor x15, x15, x19                         0000
        amoor.d x24, x19, (x15)                   0000
_l72:   slti x17, x23, 8                          0000
_l73:   ebreak                                    0000
_l74:   fsgnjx.s f12, f29, f28                    0000
_l75:   la x17, d_4_23                            0000
        lh x28, 12(x17)                           0000
_l76:   fmv.w.x f12, x19                          0000
_l77:   la x2, d_4_10                             0000
        sh x29, 14(x2)                            0000
_l78:   la x22, d_3_17                            0000
        addi x22, x22, -24                        0000
        amoadd.d x5, x22, (x22)                   0000
_l79:   divw x25, x18, x21                        0000
_l80:   la x21, d_2_0                             0000
        fsw f17, -12(x21)                         0000
_l81:   srai x3, x25, 39                          0000
_l82:   fcvt.l.s x4, f12, rtz                     0000
_l83:   fmsub.s f9, f10, f20, f13, rup            0000
_l84:   srli x0, x19, 14                          0000
_l85:   la x30, d_1_20                            0000
        lhu x27, -14(x30)                         0000
_l86:   fsub.s f3, f9, f30, rdn                   0000
_l87:   sraw x29, x2, x24                         0000
_l88:   la x27, d_3_20                            0000
        addi x27, x27, -0                         0000
        amomin.d x29, x6, (x27)                   0000
_l89:   la x11, d_3_16                            0000
        addi x11, x11, 28                         0000
        lui x5, 0xffe00                           0000
        xor x11, x11, x5                          0000
        amomax.w x21, x5, (x11)                   0000
_l90:   la x27, d_0_18                            0000
        addi x27, x27, 8                          0000
        amoxor.d x24, x13, (x27)                  0000
_l91:   csrrsi x6, pmpaddr7, 13                   0000
_l92:   fence.i                                   0000
_l93:   fmsub.s f10, f16, f31, f7, rtz            0000
_l94:   fsqrt.s f26, f5, rdn                      0000
_l95:   fcvt.s.w f28, x29, rmm                    0000
_l96:   la x15, d_5_17                            0000
        addi x15, x15, -8                         0000
        amoxor.d x16, x24, (x15)                  0000
_l97:   la x4, d_0_7                              0000
        addi x4, x4, 28                           0000
        amoadd.w x3, x13, (x4)                    0000
_l98:   fmv.x.w x23, f22                          0000
_l99:   mulhsu x6, x8, x7                         0000
_l100:  la x8, _l139                              0000
        csrrw zero, uepc, x8                      0000
        uret                                      0000
_l101:  flt.s x27, f1, f8                         0000
_l102:  csrrwi x29, pmpaddr3, 16                  0000
_l103:  la x7, d_0_24                             0000
        addi x7, x7, -16                          0000
        amomax.d x24, x15, (x7)                   0000
_l104:  subw x9, x11, x16                         0000
_l105:  divuw x30, x15, x6                        0000
_l106:  sraw x16, x2, x21                         0000
_l107:  la x24, d_2_19                            0000
        addi x24, x24, 0                          0000
        amomax.w x12, x27, (x24)                  0000
_l108:  la x29, d_3_12                            0000
        addi x29, x29, -8                         0000
        lr.d x19, (x29)                           0000
_l109:  la x6, d_3_17                             0000
        lh x5, 30(x6)                             0000
_l110:  fmv.x.w x25, f5                           0000
_l111:  mulhsu x9, x2, x3                         0000
_l112:  fmax.s f31, f27, f29                      0000
_l113:  fcvt.s.w f28, x11, rup                    0000
_l114:  la x16, d_2_1                             0000
        lb x1, -30(x16)                           0000
_l115:  remuw x16, x10, x22                       0000
_l116:  la x9, d_2_16                             0000
        lw x4, 4(x9)                              0000
_l117:  la x23, _l14                              0000
        flw f25, -12(x23)                         0000
_l118:  xori x2, x14, -499                        0000
_l119:  la x11, d_4_20                            0000
        addi x11, x11, 0                          0000
        amoswap.d x27, x8, (x11)                  0000
_l120:  remuw x24, x17, x5                        0000
_l121:  la x25, _l133                             0000
        jalr x18, 0(x25)                          0000
_l122:  la x1, d_5_9                              0000
        addi x1, x1, -0                           0000
        lui x15, 0xffe00                          0000
        xor x1, x1, x15                           0000
        amomin.w x22, x15, (x1)                   0000
_l123:  fadd.s f19, f16, f29, rup                 0000
_l124:  la x26, _l144                             0000
        csrrw zero, uepc, x26                     0000
        uret                                      0000
_l125:  fcvt.s.w f13, x13, rne                    0000
_l126:  fadd.s f1, f25, f22, rne                  0000
_l127:  la x5, d_2_18                             0000
        addi x5, x5, 4                            0000
        amomax.w x19, x9, (x5)                    0000
_l128:  xor x14, x14, x14                         0000
        csrrs x11, mie, x14                       0000
_l129:  la x30, d_3_0                             0000
        addi x30, x30, 8                          0000
        amoswap.d x29, x25, (x30)                 0000
_l130:  csrrsi x26, mhartid, 13                   0000
_l131:  la x30, d_3_22                            0000
        addi x30, x30, 16                         0000
        amoand.w x3, x4, (x30)                    0000
_l132:  subw x2, x7, x3                           0000
_l133:  fclass.s x5, f31                          0000
_l134:  bge x15, x6, _l142                        0000
_l135:  fsqrt.s f29, f22, rmm                     0000
_l136:  fmsub.s f10, f20, f10, f14, rne           0000
_l137:  la x23, d_2_20                            0000
        addi x23, x23, 16                         0000
        amomax.d x24, x30, (x23)                  0000
_l138:  la x16, d_1_10                            0000
        lb x21, -12(x16)                          0000
_l139:  fcvt.lu.s x30, f25, rdn                   0000
_l140:  fsqrt.s f4, f0, rdn                       0000
_l141:  fcvt.lu.s x7, f8, rup                     0000
_l142:  la x15, d_1_1                             0000
        sh x26, 18(x15)                           0000
_l143:  fsgnjx.s f24, f16, f10                    0000
_l144:  la x4, _l148                              0000
        csrrw zero, sepc, x4                      0000
        sret                                      0000
_l145:  la x28, d_1_14                            0000
        addi x28, x28, 0                          0000
        lui x28, 0xffe00                          0000
        xor x28, x28, x28                         0000
        amomax.w x16, x28, (x28)                  0000
_l146:  fmax.s f16, f3, f26                       0000
_l147:  fdiv.s f16, f3, f24, rdn                  0000
_s0:    ecall                                     
_s1:    la x1, d_1_11                             
        addi x1, x1, -0                           
        amoadd.d x11, x26, (x1)                   
_s2:    addw x14, x9, x10                         
_s3:    la x22, _s3                               
        lbu x29, 31(x22)                          
_s4:    la x13, d_2_13                            
        addi x13, x13, 16                         
        lui x28, 0xffe00                          
        xor x13, x13, x28                         
        amoswap.d x5, x28, (x13)                  
data:
02d234b685d280cb
317ae11dcc032e02
65e5f2757e65e8a0
e8f042de369c6b0f
c66b14ef8ed79497
552ba774071489a7
4ede1607de75f24e
bfe00b8215e8e2ab
af55903a852012dd
1da1acf1b29e4be4
9c7adecf628fe931
669ffc8c25422614
9cecf1a9cd181128
746e3fa0e600dec0
f0324fb9fa500f2b
36a71feefc9033d9
35f482d9ee07da89
1a99c8c82acaf9eb
149cdb971601e2a3
85815783b47bbb55
6658b647b0e8cff5
526ada1828c14460
7acafb5728131f13
b1547640146c4f48
f8badbf472da47a3
11b9a453ee36f06d
94a3e7f86abe21e1
6a4780070c4d8b90
48d124841afe3263
e70a8dde7acd4e4e
33e4efe11994dc85
6adff70cf2cb7f58
a8617ac04212c26d
55eb161f1c16f39a
353613f680125389
d00a3cae570de80c
86e7a4becaadf555
ad9305b4e778594f
c896f03b5c3d1f0e
631ab3e52b32b656
e59156f84ebe0ad6
5c4c145942ace449
ab3779e9f9a47137
cb94ccccdb4e0eae
2df4388f17cfafe2
dc8eeac4c10bf247
610352a3f363f51d
8ec16f9b764210bb
18fd7445b6514d5f
e5939aef85edeede
53843bbce8431180
89d11ff2173f8efd
5ec0070f9b6a2198
7be7e1f7864821d2
fc28eeadc45ec86c
de7b87de79502e1f
b6c26b373cbdb500
2720f7ea0f5a6c13
03aaf8777cfc1073
087155572046dfc1
60c34b96a5ce92b5
a18989fda7b41e0a
ad103ebf0bc9edfb
3d68cda1f4860b85
7183ba233117e9a0
0084a41fb5155cdb
5da7882ea6fecead
712e7164903de7ba
27207571f62982f3
47489692598b4954
d3a506cc5e780d2c
22d4b7fd5065a506
ad3f798aa253561b
30a5f5b175408f1e
3791021cec3a7413
1125adf3107a0512
f068840a42bb7f72
18eb8d0b8c251169
26e340ad7d056f9f
e28364a038c2a8f6
5e69ba2a461fa0d4
e46d746eb36b9b17
e87a3f1a287edc4e
b7af2fac5ec4778e
9be848bcb86e5e14
294d3a55d74746b4
7079cdf2185b9515
039ed06ddb09b2b4
8e0eb9eb7e02fadc
38bfc2b82b0779b6
0ca63049e5f22edd
4cbdbfbab76743ac
2a1e61e3293e3fc4
810c377a5d83b56e
056192fb90a80ab8
35b3bc96b38a30fc
2e3b4fff245c436f
feac03abc445dad8
2a1debff467f3128
3fd377a6e1c0f128
52216d2e5a0b9a1f
a3b46dbae24f4639
168abd6959e1af1e
aa605a84c5fcc2b9
f6479ffee39d6efb
4b410a0eeb4c21a2
40170840185b022a
f5a658004c0d90aa
25d15a476633c1b8
9af79cf2b19195ec
4d36f5fd95e63459
8048ab24d8cd60cb
433ad802860dfc5c
1267c30ba607f811
2a34ce4275024a54
bbcdb958c0e09065
8886222ac48e134f
db835fdbc389375d
f4c1460886811d87
b1a4c4dbccb05613
02496e44e3cabdea
001fb15cf9b0b488
033de71de487c215
b799050251368e24
6bdcf71a053334a2
6e08ea8d4ceb0a71
213ecb8402ed1b43
be9a98cf3791e291
0f9330c2b6c15fed
bfa24f3fdd931928
ef229c5d55a237c4
f3db924e105c21d0
50cbbfa7b5b7554c
408b8831ffde6d99
206f109d3d5fb04e
6612906f082cb46c
b3a6a38fdf55df87
9d7e6c918a9c1dd8
f57cd6c03e450cb3
65c670126576c5a7
a7519ba61455c531
68df864c8aa947b1
93ad4b4e07fb26a2
4da81aa572d1ab6e
65de03776905e50b
44672df412260b7b
2376513aa6a29509
65f0f46aa6022ae2
5515b24573543e54
9b4ca045fd12bb3e
d42a57f863ee57f2
911642b31876829d
7208d6b598af7fd3
a195ebdaadc367d0
3b5a381636bd2b57
ff180ed9e979a32c
47735867503f32ba
20c6553cfe21c0db
40930b90203e3aa8
1249b52b6bc93dd7
fdec0aae44acfeb3
21fd50687524b9d2
2611f770facf5e68
338dba99ff558aee
b0fcca5e689e87dc
162da843f399f018
a0f327c6b8ba199c
3b930cc4ffeeae05
0639a689b1b438ee
098ee6d5789a8802
3bf30f498fb5dc7c
c0fc6f99dedcb6e6
9aa4319e703a547d
b369c8f8fe4e364d
ce29fa35dd720233
3ef3b8daad6fe575
766d4739c460cc4b
ee39162e13bf7a12
ae459f008cc58806
4b7a10aef5989fbc
5f12ead0237104cd
acac5c00e98bf94e
63e7d5f8309484d5
3118a111eb3e8c8c
7d72a609953ada1d
fcf9cd5f3e6c6fa4
7c3800ac4c00d533
499a22545de44139
b3af9438103c5144
d1debfb637b865ab
fcf2bce333eea467
c2c77c0d54ab7496
351dffb5fd1d4208
3b32df2f0fc9b22c
706ad72433d825c6
2dc0e71ad5329333
6dad9b5e47839d9b
7a004251917c0410
4ead6550e191c9d3
9e2aa4d1f3669a4c
831cfad35ea7aaca
ecee5c979056d3df
13095cbc42336910
7469aed023133c51
95b0fbb39e60d04f
222528322b9d8706
e0e60b6bbcc2e2d0
9d54db5dbf2b5495
038d05a99ad7e4d1
6b8c327b34ab25d2
f93c6a169e296c17
774e948c9beb0870
72bfe2fd6ef8990f
3a1bc3acdbb784b8
76ee35a23d794e58
b524a6df8fbcf8e0
f0cb14f75287ff18
88cbda2a4d53aba5
536c7e056878a051
f4f4074c93420920
855b5bae392cf371
fe7445c87baf0134
ccbe2f9a8a3193c2
a1bbba91f19b52ae
ab13442066f0d747
bee659dd5c9dff48
18826e92102b4e11
53904efc6d93d8bf
49ec1c39b6d8a306
7d88fc3d9e98b8ce
5bd4dab7ab70b631
fbd506ad3fe25078
232f2cdc4a5b7ac2
76088a15f09fd8af
9bfaf5a6362bf664
cd21a9c606c64efe
c05ba1bdd3ea85ea
926fbaee1641f0c2
f2b581a1550d372c
fcac5f6d4a2ec26b
58f25f4fe34a8dbd
03d32a7b8b4fb543
da2a2b05b4b29d9b
40a9121a9c082c2a
616d4ff0f9e54c6d
1afc1821103c603b
431a7bffe7297d8b
fc059ccb63244ee1
00af073185867c50
9d6466fe23f43015
6767985dc62ee658
9e84d5cc30d7ce4d
5b332d931b515f8d
766802bd94de2b5e
b6e7d1a6bb04844f
dcf4b469dbffbd9e
d900ee7d728e04b5
c340fc5bdbdab559
e62c3b1a9aa50601
e4329205c705d002
a5bae3bec3c7785c
c5774b70332aa505
d2a4f980c5968c33
fe6b719538a6b7b6
d80d8249a9367445
fa0e385ecff4adc2
76d397dfa26cdcf0
597558931f30505c
c7ef0af47b7dca8e
1d723777b66857a3
d85db80b6bdda0ba
963eec91a1079997
6237d0c268b9c53a
725dc774fa7151fb
389f65050b31b676
971cfbc7e45896de
7a08f055e3c2f492
fe31568513a67aa8
6cf151030dc002b4
80655788f57e9880
6281d7b2dbfc978b
e2c2c7fbfb30e430
295ca50d77608536
d3abc9eb13846d72
43311c1fb80f78da
ddb598a0cc8828b3
93b3e728d06167b8
c92ae34414d2e57a
b846e2fe0f4071b3
6dc2afc8b9169a43
cf2f112aadee11c6
0546c2918147413d
ed106d417d7ca741
f72b7d1b4ca9c127
a5c9dfc255ba9c36
b7f093836de90a72
df6216db92ad6289
f8a86a8ef3eb7911
655c413cec5f7dd0
6b469e79e4663d76
f48cbedb52d06426
31a6eb48d26b4de9
237f999fa507d515
74c5fb76665fa73e
71ac237b1bdbc098
43aecad76be18e3f
8b4033693b926ed1
8b733205fb1ccd68
9d904e9a3e1d3ebf
e96c49f71601735d
1a4e6354a4c5b583
89274e8c8504f14e
52678b792b589463
4dd75bc7b770da6a
ca6b6d2e67b4582d
8fa4c8ebd53816df
e35ab5dd02629740
a4af3cde12e38826
9fff2114ad019001
eb63552b0483f065
f06b82f85e6a5507
fe1e5dde97342a76
cdca822fc512c29e
f4d6f506d3d4aad6
8964f2e9934188c1
aff0ca4a209f2518
a6044111e71188d2
f14d8aa5f6fbb337
f2c3af6ee1936c2e
201cc3a01b3cc139
36f631b1c685cc85
96239fa43f23606f
7896d184c507a5b2
f8b049ce62c2438d
545133858b9d192b
f01cb8d1cb95b403
9bfc101f09fbd210
76215031a9a60a8a
b76490924c813661
dc62c1167376cac4
e843eb187a51bd1c
3d134d27f0f3f737
10631275ea6438f1
cd90a8818323dfae
a6621ca8273efb04
a31923b01888b5d4
f18f5b6dac69fe61
831f7a2bac0a0342
cd972ebb7f4514ad
ef742d3ddb3093e5
6710e4199981c285
e18e0a4529987d9d
a4b7feb4ea9269c4
4618d644a1c90e78
f9c3662cc4ff81b2
4ddd4b4ddc2d3008
0d7b0fa7c14ed4ae
aeb5d1569039ce7d
df43b8e3b4601b37
d814a3d11386e1b2
33b469b02324b31e
6af1beb2a8a477c5
358493e45922c160
a327da266dcd5fa7
f47f5b53056b3889
00621d793bf2c8cf
256391fbc639bf71
18eede9db0d6e5dd
6c596f94037ec480
75d53ef5427a755e
e90caed725f0e603
e40546d31692b500
299a87eb069d3882
1fc304c19ac730d2
26ba281917be989c
cbef0b005b0a612c
4c49bd68dd31947d
21af8c50630d8a65
befb438c6896c0f4
ee03cbf2f699fe87
4126841b5b7dc9a1
181247e206d271fc
8bc02caba35eba7d
65c45c33a15af40c
