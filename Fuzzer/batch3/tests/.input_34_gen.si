p-s

_p0:    xor x14, x14, x14                         
        addi x11, zero, 3                         
        slli x11, x11, 29                         
        add x14, x14, x11                         
        addi x11, zero, 3                         
        slli x11, x11, 20                         
        add x14, x14, x11                         
        addi x14, zero, 1                         
        slli x14, x14, 12                         
        add x14, x14, x14                         
        csrrs x12, sscratch, x14                  
_p1:    xor x14, x14, x14                         
        addi x13, zero, 1                         
        slli x13, x13, 20                         
        add x14, x14, x13                         
        addi x14, zero, 3                         
        slli x14, x14, 6                          
        add x14, x14, x14                         
        addi x14, zero, 3                         
        slli x14, x14, 26                         
        add x14, x14, x14                         
        csrrs x14, scause, x14                    
_p2:    csrrci x14, sscratch, 28                  
_l0:    mulhu x27, x19, x11                       0000
_l1:    la x26, d_5_17                            0000
        lui x2, 0xffe00                           0000
        xor x26, x26, x2                          0000
        fsw f15, 4(x26)                           0000
_l2:    fcvt.s.l f30, x18, rne                    0000
_l3:    addw x28, x17, x2                         0000
_l4:    la x24, d_5_27                            0000
        addi x24, x24, -8                         0000
        amomin.d x23, x2, (x24)                   0000
_l5:    mul x25, x27, x3                          0000
_l6:    ebreak                                    0000
_l7:    addi x8, x15, 2047                        0000
_l8:    fclass.s x13, f25                         0000
_l9:    ebreak                                    0000
_l10:   la x28, d_3_21                            0000
        addi x28, x28, -12                        0000
        amoxor.w x9, x4, (x28)                    0000
_l11:   fsgnj.s f4, f19, f7                       0000
_l12:   beq x9, x3, _l44                          0000
_l13:   la x2, d_4_16                             0000
        ld x9, -0(x2)                             0000
_l14:   la x14, d_4_10                            0000
        ld x27, -0(x14)                           0000
_l15:   la x28, d_1_14                            0000
        addi x28, x28, -12                        0000
        sc.w x5, x8, (x28)                        0000
_l16:   la x24, d_3_27                            0000
        addi x24, x24, -8                         0000
        amoadd.d x25, x8, (x24)                   0000
_l17:   fcvt.l.s x17, f17, rup                    0000
_l18:   la x12, _l65                              0000
        csrrw zero, sepc, x12                     0000
        sret                                      0000
_l19:   la x23, d_3_7                             0000
        ld x18, 0(x23)                            0000
_l20:   sraiw x10, x8, 20                         0000
_l21:   la x1, d_3_4                              0000
        ld x19, -0(x1)                            0000
_l22:   fence.i                                   0000
_l23:   la x28, d_3_3                             0000
        addi x28, x28, -16                        0000
        amoadd.w x16, x17, (x28)                  0000
_l24:   la x19, d_5_15                            0000
        lui x10, 0xffe00                          0000
        xor x19, x19, x10                         0000
        fsw f12, -4(x19)                          0000
_l25:   la x26, _l30                              0000
        csrrw zero, sepc, x26                     0000
        sret                                      0000
_l26:   mulhu x18, x27, x27                       0000
_l27:   ori x3, x5, -1436                         0000
_l28:   csrrsi x3, pmpaddr3, 17                   0000
_l29:   la x16, d_1_11                            0000
        addi x16, x16, -28                        0000
        sc.w x12, x17, (x16)                      0000
_l30:   mulh x9, x3, x0                           0000
_l31:   fence                                     0000
_l32:   la x16, d_5_13                            0000
        lbu x9, -28(x16)                          0000
_l33:   srliw x14, x0, 22                         0000
_l34:   remu x9, x1, x1                           0000
_l35:   beq x17, x14, _l101                       0000
_l36:   la x5, _l120                              0000
        lhu x19, 20(x5)                           0000
_l37:   la x20, d_4_16                            0000
        lhu x16, 28(x20)                          0000
_l38:   fmv.x.w x8, f31                           0000
_l39:   fmadd.s f25, f23, f20, f21, rup           0000
_l40:   la x9, _l7                                0000
        lwu x24, 16(x9)                           0000
_l41:   la x29, d_5_25                            0000
        addi x29, x29, -20                        0000
        amoor.w x8, x22, (x29)                    0000
_l42:   fadd.s f13, f31, f20, dyn                 0000
_l43:   la x28, d_5_12                            0000
        lb x4, -13(x28)                           0000
_l44:   fsgnjn.s f30, f16, f13                    0000
_l45:   beq x12, x21, _l76                        0000
_l46:   sraw x10, x11, x4                         0000
_l47:   la x12, d_1_17                            0000
        sb x2, -17(x12)                           0000
_l48:   la x30, d_1_21                            0000
        lb x5, 31(x30)                            0000
_l49:   mulh x6, x20, x23                         0000
_l50:   slti x0, x19, 883                         0000
_l51:   fclass.s x15, f18                         0000
_l52:   divu x21, x11, x26                        0000
_l53:   xor x23, x23, x23                         0000
        addi x1, zero, 3                          0000
        slli x1, x1, 3                            0000
        add x23, x23, x1                          0000
        addi x9, zero, 3                          0000
        slli x9, x9, 18                           0000
        add x23, x23, x9                          0000
        addi x9, zero, 1                          0000
        slli x9, x9, 0                            0000
        add x23, x23, x9                          0000
        csrrw x23, satp, x23                      0000
_l54:   addi x12, x14, -265                       0000
_l55:   csrrci x5, pmpaddr1, 2                    0000
_l56:   mulh x19, x11, x25                        0000
_l57:   remuw x28, x26, x3                        0000
_l58:   addw x1, x19, x28                         0000
_l59:   ori x13, x0, 14                           0000
_l60:   la x13, d_5_7                             0000
        addi x13, x13, 0                          0000
        lr.w x3, (x13)                            0000
_l61:   la x26, d_3_5                             0000
        addi x26, x26, -24                        0000
        amoadd.d x14, x27, (x26)                  0000
_l62:   lui x7, 1048575                           0000
_l63:   la x24, d_2_11                            0000
        addi x24, x24, -28                        0000
        lui x5, 0xffe00                           0000
        xor x24, x24, x5                          0000
        amominu.w x1, x5, (x24)                   0000
_l64:   la x11, d_3_12                            0000
        addi x11, x11, -28                        0000
        amoswap.w x4, x6, (x11)                   0000
_l65:   la x4, d_1_1                              0000
        addi x4, x4, -8                           0000
        amoor.w x15, x20, (x4)                    0000
_l66:   la x21, _l68                              0000
        lb x20, -31(x21)                          0000
_l67:   srliw x8, x18, 28                         0000
_l68:   fdiv.s f27, f11, f19, rne                 0000
_l69:   li x29, 0                                 0000
        la x25, pt3                               0000
        addi x25, x25, 8                          0000
        sfence.vma x29, x25                       0000
_l70:   la x14, d_1_13                            0000
        addi x14, x14, 0                          0000
        amoswap.w x18, x19, (x14)                 0000
_l71:   la x7, _l101                              0000
        csrrw zero, sepc, x7                      0000
        sret                                      0000
_l72:   fmsub.s f17, f27, f20, f21, rup           0000
_l73:   fmsub.s f13, f18, f25, f23, rmm           0000
_l74:   la x7, d_5_22                             0000
        fsw f4, -20(x7)                           0000
_l75:   la x6, d_5_11                             0000
        addi x6, x6, 16                           0000
        amomax.d x22, x1, (x6)                    0000
_l76:   la x11, d_4_10                            0000
        lb x22, 0(x11)                            0000
_l77:   fcvt.s.w f19, x4, rmm                     0000
_l78:   divw x13, x20, x26                        0000
_l79:   la x14, d_2_6                             0000
        addi x14, x14, 24                         0000
        sc.w x1, x11, (x14)                       0000
_l80:   addw x18, x22, x7                         0000
_l81:   la x5, d_3_13                             0000
        addi x5, x5, 28                           0000
        sc.w x11, x27, (x5)                       0000
_l82:   fence                                     0000
_l83:   rem x11, x9, x2                           0000
_l84:   ori x20, x24, -1944                       0000
_l85:   la x8, d_2_12                             0000
        sw x13, -12(x8)                           0000
_l86:   fnmadd.s f12, f20, f19, f20, dyn          0000
_l87:   xor x8, x8, x8                            0000
        addi x4, zero, 3                          0000
        slli x4, x4, 4                            0000
        add x8, x8, x4                            0000
        addi x3, zero, 3                          0000
        slli x3, x3, 5                            0000
        add x8, x8, x3                            0000
        csrrw x10, mie, x8                        0000
_l88:   fnmsub.s f2, f20, f28, f27, rmm           0000
_l89:   slli x4, x10, 31                          0000
_l90:   mulw x27, x12, x0                         0000
_l91:   la x17, d_1_19                            0000
        addi x17, x17, 0                          0000
        amoxor.d x29, x25, (x17)                  0000
_l92:   la x13, d_2_1                             0000
        lhu x6, 4(x13)                            0000
_l93:   bltu x13, x21, _l96                       0000
_l94:   fsub.s f25, f18, f23, rtz                 0000
_l95:   la x30, d_0_20                            0000
        addi x30, x30, 0                          0000
        amoor.d x26, x22, (x30)                   0000
_l96:   la x27, d_1_13                            0000
        addi x27, x27, 8                          0000
        amomin.d x4, x18, (x27)                   0000
_l97:   fsub.s f29, f31, f29, rne                 0000
_l98:   fence                                     0000
_l99:   la x30, d_0_6                             0000
        addi x30, x30, 8                          0000
        amominu.d x19, x1, (x30)                  0000
_l100:  addiw x1, x8, -22                         0000
_l101:  feq.s x2, f18, f1                         0000
_l102:  la x18, d_5_15                            0000
        fsw f23, -16(x18)                         0000
_l103:  la x2, d_5_19                             0000
        addi x2, x2, -4                           0000
        lui x13, 0xffe00                          0000
        xor x2, x2, x13                           0000
        amoswap.w x25, x13, (x2)                  0000
_l104:  xor x22, x22, x22                         0000
        addi x26, zero, 1                         0000
        slli x26, x26, 11                         0000
        add x22, x22, x26                         0000
        addi x9, zero, 3                          0000
        slli x9, x9, 7                            0000
        add x22, x22, x9                          0000
        addi x8, zero, 3                          0000
        slli x8, x8, 12                           0000
        add x22, x22, x8                          0000
        csrrs x26, fflags, x22                    0000
_l105:  fclass.s x26, f4                          0000
_l106:  fnmsub.s f26, f16, f12, f2, rup           0000
_l107:  mulw x1, x30, x6                          0000
_l108:  srliw x6, x26, 2                          0000
_l109:  mulhsu x15, x20, x27                      0000
_l110:  la x13, d_0_8                             0000
        sw x25, 28(x13)                           0000
_l111:  la x22, d_1_22                            0000
        ld x2, 24(x22)                            0000
_l112:  subw x20, x20, x17                        0000
_l113:  xor x4, x4, x4                            0000
        addi x10, zero, 3                         0000
        slli x10, x10, 4                          0000
        add x4, x4, x10                           0000
        csrrs x2, fflags, x4                      0000
_l114:  xor x15, x15, x15                         0000
        addi x20, zero, 1                         0000
        slli x20, x20, 31                         0000
        add x15, x15, x20                         0000
        csrrs x21, mstatus, x15                   0000
_l115:  xor x22, x22, x22                         0000
        csrrs x30, sie, x22                       0000
_l116:  la x17, d_4_15                            0000
        addi x17, x17, 0                          0000
        amoor.d x2, x16, (x17)                    0000
_l117:  la x3, d_4_13                             0000
        sd x21, 0(x3)                             0000
_l118:  fsqrt.s f25, f20, rne                     0000
_l119:  fmv.w.x f22, x18                          0000
_l120:  fcvt.w.s x14, f4, rdn                     0000
_l121:  bge x9, x23, _l125                        0000
_l122:  csrrci x7, mepc, 31                       0000
_l123:  addw x12, x7, x6                          0000
_l124:  div x18, x8, x22                          0000
_l125:  fcvt.wu.s x0, f21, rmm                    0000
_l126:  remuw x14, x29, x22                       0000
_l127:  slliw x16, x17, 6                         0000
_l128:  mulhsu x4, x24, x10                       0000
_l129:  csrrci x2, mscratch, 27                   0000
_l130:  fmsub.s f3, f3, f24, f28, rne             0000
_l131:  divuw x1, x3, x13                         0000
_l132:  la x28, d_5_14                            0000
        addi x28, x28, -16                        0000
        amomaxu.d x28, x2, (x28)                  0000
_s0:    divu x3, x23, x20                         
_s1:    la x8, d_1_10                             
        addi x8, x8, -0                           
        amoand.w x17, x24, (x8)                   
_s2:    la x28, d_4_26                            
        addi x28, x28, 8                          
        amoxor.d x15, x13, (x28)                  
_s3:    fmin.s f1, f12, f21                       
_s4:    srli x28, x6, 37                          
data:
57441b0d1c2b1d48
edf7ec4271d29a9b
db6d7d4e31983a79
b4dc3f678162e2f9
ef983ce49ceae6d7
7908de2407a318e7
428886f82532ecf5
7c8f3086205672e3
6362a5429a162cf5
760f6d03b2448833
4627264b790af9fd
1e655f77b9caf9e4
4bc30757ee9ee9c7
24f8e42dc44a5c11
10bcbee1d322d1b0
f39944416e605891
1844f52395586812
03f87f272fbcd10f
2a4460fa14bfcd57
3a6095535f2577c2
dd8c798ac1136ba8
72f6279dad672f61
729c085fd9ef0bbe
8f72fced2cf6edc6
8f08243eec884030
f897349042b0576e
30fdabc00cd4069b
f7e19f8b80e2af34
6afeb528744976ab
6b0c37cee1f332fa
a6f1d5fe986f1c39
b0d7ba52612f5db8
8629b2bfa7f3b259
90bcc7f8a1e496bb
1de5949e4e704820
e5f31d8fc3488f2d
7b0da650e91880f0
2cb822aed4a05644
133c2dddc7cf0cf4
aa2b6a1db45c7dd4
c732020560819702
3e97d20637d09906
e3e9e587fed15c28
c442e68e14cc9e11
33628d19a3ce30a0
37242628a3b7431f
f3cd8d126d3f1667
50a71e33c5d61809
f9a8e0417f8be0b8
725ed2c59b3b39b3
f001bea92b6435d6
0610ddebedeb6325
60012b6c6fd06f29
bc8abfa7eab807e4
44d93d1a39c43ebf
3cdd8045ed22af41
8534bd9968268fb2
37b433ae542088a1
4abf3c68eeaa2f55
9e42a17f8089a0e1
cb25e124c6208fc1
28caec2d2a8d23d1
721985da3ff38cce
91caf63ab2ca2060
e732febdf39d5411
65cef822b34f5d30
1691d4a02b469f3b
09268c4c207eb582
88c2c5d12ca5e337
7b57f596af872e4f
d690b36f35f16a85
4a487fcb4905a852
23e4029d986bbfc5
8d0a3b58ef18d187
dfa52a8895c0fb25
09b45c6487068458
f216fc99fc654e8b
e84f770c0f1f85a7
bc8921e12b725801
a5b09985d2d2a31b
df84f9914560b32a
0b205563562d7a8f
e5d746e5e67a7ee3
ba3231a0ae39509d
078f705b8a1d8506
d00c6b58792a0aed
2a6609313c0618b7
256b9fcdbd87e367
518916d840d8ba09
d78ff7d78de3e882
85f4a58fead16305
7026cc63450d3973
6eb41869ad903780
7be4c0458cb14087
e2b21fa956f878d9
d6856f4bc93008bd
1c6614d2f179d1f3
2335d3156ebd5f72
b460333c10cc2fc3
e7f3a43b0ebbddb5
e37f6684e0a27fe6
c9bb534496fba6eb
25c8322fec9d6130
2a4397e5466ad7d5
cc1847eeada8e204
ea3d6396d52ece0b
4bf4404266c27401
2a228731d0143b28
af73789458dc7789
835cfbe070055948
b56ff864a0d52ef6
2ed219187c7dc7c7
910c5d19ee1ca7e7
8aeb622d12802f62
5bb65bddf18d7eaf
49ec76fd42714cac
0f450b5410eb437b
3c71117247d0f80c
a82f21cbaf9a2eb3
04869dc68549e26c
98f94f5b96fd1554
350f0954e3ee2fee
c44e11af4954ad2f
ad6035ef99545a86
51aedac2fda2c16c
2ffcda1f420aa63a
4e59b3840d0130fc
b47c6ac4089f087f
260b530e5cb37ebc
ee2a437a603987cb
b3210d5f397ed459
ca6aa3404e6122a0
a588241e8f67dc76
4bd1a85d33b5cfed
43bc1a038e94a2c0
c6bc4e89256c0176
19e0627533848be3
84e2f92eda86c96e
fd28c0ef3686d3f7
b9866df577d59707
8949b19a6cccee75
53caac2a44e07f09
a5e7b7403a61c502
b6d68a50918b7029
53f239f783b6f06a
d683555dde7a6240
e6eb46df377c9f1e
6520dc2a2e2f3d67
0c96689a21d7d468
95dfe6e03ee354b0
3363f41015819a92
c60660b1cbed0134
d2dd63c38c5a6069
827c717b0955e7a2
c7a1dc67c6918cd8
a1c68c03d5ffbe8e
233c20ae717bdcea
c620513d64ffd021
b7ee0abc7c61c119
534b9448ea5901bd
b1b2845beef1070d
9774d0e2f638119a
6a9272d97822522c
9734a513beb5475c
2db26e9ba3a1e0ae
57821feff89e92f3
1ae1605131b4e888
c0b63f288551b933
fb68399e55f76eb3
31ca4c98d06cc39f
a9e98e7b2bbc2523
da7a1cdca872163d
cdef66d49dcb4389
1f4c9e3a352e60df
92c5f470dd719c49
3789772749753a5e
5d8048390f038f39
81fc06b387f8d373
4bb171ec94903710
1131598dd22a56aa
6f06517ab503d2d0
6c932cde4a87bfc0
0ac126946e0d4b41
a3070540ac4b4001
a9611ecf8f93db84
c3187f14fa084811
d8f33d8baab4c8bf
e495e14ed0d93269
d600862cf5f7054d
4bd5584acf23fc90
88f52e08b5d76ab6
582c5fa88d69c94f
0914151b430f08e2
ce1bbbdfa76603ae
8bf9f7214f1e49b1
2ad207d42ef51207
38431a54f0e0c1d8
707c61f743dd47d1
d34bd40268de3b88
65630a65e69abb3b
fc48dea558db33f4
702a549a6be0762b
f9d4689256db2bac
540843d8fe00df80
fd372b293588f7b6
9c343b29236d9db0
b77785794085cb6f
5a47bf1dafa02ca0
319dfe7af85c6001
910fb5fd44a6b05e
24fb42893a26adfd
7f84567224f15ceb
ed74c4b894f521dd
00738360e50dd6d9
bc9f1ddc004c462f
848f7930507be832
e4cad9b2a3ebab4f
409953e789722a3c
deae29523d213d83
66278dfa44936a3b
ac3d1f9a03db0ffc
a2f1544a35bd8788
bb8af50172063803
21cc432dbbd9e5c9
85abcae7cdf7f539
5d9f6dbe81f329b5
71f4dba91115ce51
3d8cdc2aa97f5423
b30b23ed373359e1
c78f2c59ed664a8a
674abe2060902b82
6a1e79c205751f2f
9d4450fc2e9f427c
d800daf184f29508
7a49b16d0894a98c
51def63334c5d732
7e3d0e9088457874
b265cb48489953b8
e3a4a0f8b4d16ebe
d94620a1609a185d
b9c397f345b272fd
4323b1d17f5d7a1f
a9af8bb31dc58ad6
1ebcf901a7c92b43
a5b209f214b54fc3
91c39ab9fa618a04
3a948db6c8b3ef59
d7f8703b937fb0bb
65540fdb31d85b7d
61dbc6fe2aee4113
65f6614d4567cb41
1f72d0987a9bab0f
74a383c035e140ae
a96c0e2c16d9604f
b41dabb4efdc85cb
11aa91eba2a69ca7
068aee9ad211920b
8e4bef46c9d47399
d061f8325b91762c
c120a0b357a19dd7
9c4ebc019ed2d845
28a27d9b04195961
09cca19e2fbf05e3
3682ac0a7dd5bc8b
ac21405c7b8bdd3f
50f85ac166501371
ad87dcbe2511b5d7
59cd31a0c68c9f2f
f3d923262b68124c
ccaaf43c83a52d5e
a6a8c0921817b1b4
77f84930636683ef
3ad71171fef54860
ddb4e2ae24decaab
2f29b9800e9addb2
e0cdb1576daa318d
48eec4045a2f0d49
5c5dfa16670f948f
4f4c1b141c7bdbd6
b2b1dbfaa0e095a4
919300c25da959f3
ee31dd34b8b8574e
83db125fe544adb5
d4809136c82e0437
1467dbe32a305e1b
3bc37ec16cd26cc5
371afaa8ceb2c10d
539156e7171b3e03
80d54c857ff839e3
876c253da85aad7c
1ad0db557da2826a
f5765f03e284aa5a
42ed730c0645aafe
e676a6ee5c5d0de6
7c7e0bb3ca069ce9
ae55302c50952dfd
63c79f1b74f7f0f4
37a13b654d2c8536
01a575c7f15765a6
b44890cb1a6edc43
37153418180fad06
eb52e35dc1982e59
a2210c22d2549409
c94ab357a79b9caa
96e6ea0af5dccb05
9cb677b2c2969f70
f1bc9bf41e0a02b7
c010961e9503e561
c75e43f627328f66
fbba1649624d2f25
532bf41acd206f1e
75c81ccb26343219
89cfbc92076b53a0
90d413cb5d5c56a7
aef087580a21eb57
7870dc64b704d759
a2f34f801eb1cd9a
71df7b72b55bfb0c
1e592e8fd66a322f
0816230d772e361c
369fb7c5d9ac63f4
82221d63eda2b182
70a8f71d19e73ab6
eca3f21c895c9772
31e3c6af24c67a07
8ce8989a4cc91716
b9b0d8338ba1d070
fb30303f1f74678f
8b41bbb65b80b623
b8d030375564c99f
9af04e1bdfa21b42
3f9b7b77e48d4dcc
c07790af49d54a90
0c87bc49c2a86005
deec3e51506bce93
3e2569fb04fadd62
fe37c32a69c15208
48fd62dc6f4d99c4
ebe657551f125b77
16801df28dc76cc3
d0675d732f0dbbda
ffe146035883fcfc
12877228692d7800
ec796a6465746084
94e498b2c497d256
eb27c1136cc36c19
e073207ee1464277
fbaac82c26bba404
25929727ec422107
9f2630fd7d4b9435
34f1c1db92a11a81
c0737ef930d1e07e
de062c6405eb3e52
50fadaae4ce2fb48
3f4f1a16d2ad92cf
ccc49da13b1c226a
b55fbf497300d174
ef402a060a033138
684200ae317e172c
e1a48c5f28e76da4
7226522c3c0065cd
220a0bd52f38d51a
21ce8e80a9c6f3e8
66424d7f7af60b32
70b8e00dcaadd694
e388933efc2b608e
663040e8d1c16dbc
7bf004cc84500371
69f02d2ea7d7af03
c52c7163eaaa6977
3b5241aacd4db365
f39da60f019a9bac
89333ec2bdafa15c
a5e779a689defed2
535c5e07c4ca13e8
87e8369cc45fadf2
1d33f9af6e67ba91
23fd02e31687103f
df47801c7382847a
4a31d9d1c52ccf7a
77146c847722b617
3f8ff450a34db71c
37400b798160041f
62cd6d63d20326c7
